function tui_widget_ext_Location_initApi(){tui.widget.ext.Location.initApi()}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},tui;!function(tui){var widget;!function(widget){var ext;!function(ext){"use strict";var _mapInit=!1,_mapLoaded=!1,_initFunctions=[],Location=function(_super){function Location(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Location,_super),Location.initApi=function(){_mapLoaded=!0;for(var _i=0,_initFunctions_1=_initFunctions;_i<_initFunctions_1.length;_i++){var initDef=_initFunctions_1[_i];initDef.func.call(initDef.context)}},Location.prototype.initRestriction=function(){_super.prototype.initRestriction.call(this),this._selectedAddress=null,this._map=null;var input=widget.create("input");this._components.input=input._,this.setRestrictions({value:{set:function(value){input.set("value",value)},get:function(){return input.get("value")}},validate:{set:function(value){input.set("validate",value)},get:function(){return input.get("validate")}},autoValidate:{set:function(value){input.set("autoValidate",value)},get:function(){return input.get("autoValidate")}},clearable:{set:function(value){input.set("clearable",value)},get:function(){return input.get("clearable")}},placeholder:{set:function(value){input.set("placeholder",value)},get:function(){return input.get("placeholder")}},text:{set:function(value){input.set("text",value)},get:function(){return input.get("text")}}})},Location.prototype.initChildren=function(childNodes){var input=widget.get(this._components.input);input._set("validate",widget.InputBase.parseValidators(childNodes))},Location.prototype.initMap=function(){var _this=this,mapDiv=this._components.map,address=this._components.address,map=new window.AMap.Map(mapDiv,{zoom:10,center:[116.39,39.9]});this._map=map,window.AMap.service("AMap.Geocoder",function(){_this._geocoder=new window.AMap.Geocoder}),map.plugin("AMap.Geolocation",function(){var geolocation=new window.AMap.Geolocation({enableHighAccuracy:!1,timeout:5e3,maximumAge:0,convert:!0,showButton:!0,buttonPosition:"LB",buttonOffset:new window.AMap.Pixel(10,20),showMarker:!0,showCircle:!0,panToLocation:!0,zoomToAccuracy:!0});map.addControl(geolocation),window.AMap.event.addListener(geolocation,"complete",function(e){}),window.AMap.event.addListener(geolocation,"error",function(e){tui.errbox(tui.str("geo.location.failed"))})}),map.on("click",function(e){$(address).text(tui.str("Locating...")),_this._geocoder&&_this._geocoder.getAddress(e.lnglat,function(status,result){"complete"===status&&"OK"===result.info?($(address).text(result.regeocode.formattedAddress),_this._selectedAddress=result.regeocode.formattedAddress,map.clearMap(),new window.AMap.Marker({position:e.lnglat,map:map})):$(address).text(tui.str("error"))})})},Location.prototype.init=function(){var _this=this;if(!_mapInit){_mapInit=!0;var mapUrl="https://webapi.amap.com/maps?v=1.3&key="+this.get("appKey")+"&callback=tui_widget_ext_Location_initApi";$.getScript(mapUrl)}var dialogContent=this._components.content=document.createElement("div");dialogContent.className="tui-map-content";var address=this._components.address=document.createElement("div");address.className="tui-map-address",dialogContent.appendChild(address);var mapDiv=this._components.map=document.createElement("div");mapDiv.className="tui-map-container",dialogContent.appendChild(mapDiv);var input=widget.get(this._components.input);input.set("iconRight","fa-map-marker"),input.appendTo(this._),_mapLoaded?this.initMap():_initFunctions.push({context:this,func:this.initMap}),input.on("right-icon-mousedown",function(){var dlg=widget.create("dialog");dlg._set("title",tui.str("address")),dlg.setContent(dialogContent),dlg.open("ok#tui-primary");var inputValue=input.get("value");inputValue?inputValue!=_this._selectedAddress&&_this._geocoder&&_this._geocoder.getLocation(inputValue,function(status,result){"complete"===status&&"OK"===result.info?($(address).text(inputValue),_this._selectedAddress=inputValue,_this._map.clearMap(),new window.AMap.Marker({position:result.geocodes[0].location,map:_this._map}),_this._map.setCenter(result.geocodes[0].location)):($(address).text(inputValue),_this._selectedAddress=inputValue)}):(_this._map.clearMap(),$(address).text(""),_this._selectedAddress=null),dlg.on("btnclick",function(){_this._selectedAddress?(input.set("value",_this._selectedAddress),_this.fire("change",{value:_this._selectedAddress}),dlg.close()):tui.msgbox(tui.str("please.select.point"))})})},Location.prototype.reset=function(){var input=widget.get(this._components.input);input.reset()},Location.prototype.updateEmptyState=function(empty){var input=widget.get(this._components.input);input.updateEmptyState(empty)},Location.prototype.validate=function(e){var input=widget.get(this._components.input);return input.validate(e)},Location.prototype.render=function(){},Location}(widget.Widget);ext.Location=Location,widget.register(Location,"location");var FormAddress=function(_super){function FormAddress(form,define){return _super.call(this,form,define,"location",tui.str("picture"))||this}return __extends(FormAddress,_super),FormAddress.prototype.showProperty=function(){throw new Error("Method not implemented.")},FormAddress.prototype.validate=function(){return!0},FormAddress}(widget.BasicFormControl);widget.Form.register("address",FormAddress)}(ext=widget.ext||(widget.ext={}))}(widget=tui.widget||(tui.widget={}))}(tui||(tui={}));
//# sourceMappingURL=location.min.js.map
